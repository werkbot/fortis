<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Changelog;
use FortisAPILib\Models\ChangelogDetail;
use FortisAPILib\Models\User;

/**
 * Builder for model Changelog
 *
 * @see Changelog
 */
class ChangelogBuilder
{
    /**
     * @var Changelog
     */
    private $instance;

    private function __construct(Changelog $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Changelog Builder object.
     */
    public static function init(): self
    {
        return new self(new Changelog());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets created ts field.
     *
     * @param int|null $value
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Unsets created ts field.
     */
    public function unsetCreatedTs(): self
    {
        $this->instance->unsetCreatedTs();
        return $this;
    }

    /**
     * Sets action field.
     *
     * @param string|null $value
     */
    public function action(?string $value): self
    {
        $this->instance->setAction($value);
        return $this;
    }

    /**
     * Unsets action field.
     */
    public function unsetAction(): self
    {
        $this->instance->unsetAction();
        return $this;
    }

    /**
     * Sets model field.
     *
     * @param string|null $value
     */
    public function model(?string $value): self
    {
        $this->instance->setModel($value);
        return $this;
    }

    /**
     * Unsets model field.
     */
    public function unsetModel(): self
    {
        $this->instance->unsetModel();
        return $this;
    }

    /**
     * Sets model id field.
     *
     * @param string|null $value
     */
    public function modelId(?string $value): self
    {
        $this->instance->setModelId($value);
        return $this;
    }

    /**
     * Unsets model id field.
     */
    public function unsetModelId(): self
    {
        $this->instance->unsetModelId();
        return $this;
    }

    /**
     * Sets user id field.
     *
     * @param string|null $value
     */
    public function userId(?string $value): self
    {
        $this->instance->setUserId($value);
        return $this;
    }

    /**
     * Unsets user id field.
     */
    public function unsetUserId(): self
    {
        $this->instance->unsetUserId();
        return $this;
    }

    /**
     * Sets changelog details field.
     *
     * @param ChangelogDetail[]|null $value
     */
    public function changelogDetails(?array $value): self
    {
        $this->instance->setChangelogDetails($value);
        return $this;
    }

    /**
     * Sets user field.
     *
     * @param User|null $value
     */
    public function user(?User $value): self
    {
        $this->instance->setUser($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Changelog object.
     */
    public function build(): Changelog
    {
        return CoreHelper::clone($this->instance);
    }
}
