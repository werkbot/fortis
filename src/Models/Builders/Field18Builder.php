<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Field18;

/**
 * Builder for model Field18
 *
 * @see Field18
 */
class Field18Builder
{
    /**
     * @var Field18
     */
    private $instance;

    private function __construct(Field18 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Field 18 Builder object.
     */
    public static function init(): self
    {
        return new self(new Field18());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets label field.
     *
     * @param string|null $value
     */
    public function label(?string $value): self
    {
        $this->instance->setLabel($value);
        return $this;
    }

    /**
     * Sets field type field.
     *
     * @param string|null $value
     */
    public function fieldType(?string $value): self
    {
        $this->instance->setFieldType($value);
        return $this;
    }

    /**
     * Sets position field.
     *
     * @param string[]|null $value
     */
    public function position(?array $value): self
    {
        $this->instance->setPosition($value);
        return $this;
    }

    /**
     * Sets required field.
     *
     * @param bool|null $value
     */
    public function required(?bool $value): self
    {
        $this->instance->setRequired($value);
        return $this;
    }

    /**
     * Sets readonly field.
     *
     * @param bool|null $value
     */
    public function readonly(?bool $value): self
    {
        $this->instance->setReadonly($value);
        return $this;
    }

    /**
     * Sets visible field.
     *
     * @param bool|null $value
     */
    public function visible(?bool $value): self
    {
        $this->instance->setVisible($value);
        return $this;
    }

    /**
     * Sets value field.
     *
     * @param string|null $value
     */
    public function value(?string $value): self
    {
        $this->instance->setValue($value);
        return $this;
    }

    /**
     * Unsets value field.
     */
    public function unsetValue(): self
    {
        $this->instance->unsetValue();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Field 18 object.
     */
    public function build(): Field18
    {
        return CoreHelper::clone($this->instance);
    }
}
