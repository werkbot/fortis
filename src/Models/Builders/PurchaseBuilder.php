<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\MerchantRiskIndicator;
use FortisAPILib\Models\Purchase;

/**
 * Builder for model Purchase
 *
 * @see Purchase
 */
class PurchaseBuilder
{
    /**
     * @var Purchase
     */
    private $instance;

    private function __construct(Purchase $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Purchase Builder object.
     */
    public static function init(): self
    {
        return new self(new Purchase());
    }

    /**
     * Sets purchase install data field.
     *
     * @param int|null $value
     */
    public function purchaseInstallData(?int $value): self
    {
        $this->instance->setPurchaseInstallData($value);
        return $this;
    }

    /**
     * Sets merchant risk indicator field.
     *
     * @param MerchantRiskIndicator|null $value
     */
    public function merchantRiskIndicator(?MerchantRiskIndicator $value): self
    {
        $this->instance->setMerchantRiskIndicator($value);
        return $this;
    }

    /**
     * Sets purchase amount field.
     *
     * @param int|null $value
     */
    public function purchaseAmount(?int $value): self
    {
        $this->instance->setPurchaseAmount($value);
        return $this;
    }

    /**
     * Sets purchase currency field.
     *
     * @param string|null $value
     */
    public function purchaseCurrency(?string $value): self
    {
        $this->instance->setPurchaseCurrency($value);
        return $this;
    }

    /**
     * Sets purchase exponent field.
     *
     * @param int|null $value
     */
    public function purchaseExponent(?int $value): self
    {
        $this->instance->setPurchaseExponent($value);
        return $this;
    }

    /**
     * Sets purchase date field.
     *
     * @param string|null $value
     */
    public function purchaseDate(?string $value): self
    {
        $this->instance->setPurchaseDate($value);
        return $this;
    }

    /**
     * Sets recurring expiry field.
     *
     * @param string|null $value
     */
    public function recurringExpiry(?string $value): self
    {
        $this->instance->setRecurringExpiry($value);
        return $this;
    }

    /**
     * Sets recurring frequency field.
     *
     * @param int|null $value
     */
    public function recurringFrequency(?int $value): self
    {
        $this->instance->setRecurringFrequency($value);
        return $this;
    }

    /**
     * Sets transaction type field.
     *
     * @param string|null $value
     */
    public function transactionType(?string $value): self
    {
        $this->instance->setTransactionType($value);
        return $this;
    }

    /**
     * Sets recurring amount field.
     *
     * @param int|null $value
     */
    public function recurringAmount(?int $value): self
    {
        $this->instance->setRecurringAmount($value);
        return $this;
    }

    /**
     * Sets recurring currency field.
     *
     * @param string|null $value
     */
    public function recurringCurrency(?string $value): self
    {
        $this->instance->setRecurringCurrency($value);
        return $this;
    }

    /**
     * Sets recurring exponent field.
     *
     * @param int|null $value
     */
    public function recurringExponent(?int $value): self
    {
        $this->instance->setRecurringExponent($value);
        return $this;
    }

    /**
     * Sets recurring date field.
     *
     * @param string|null $value
     */
    public function recurringDate(?string $value): self
    {
        $this->instance->setRecurringDate($value);
        return $this;
    }

    /**
     * Sets amount ind field.
     *
     * @param string|null $value
     */
    public function amountInd(?string $value): self
    {
        $this->instance->setAmountInd($value);
        return $this;
    }

    /**
     * Sets frequency ind field.
     *
     * @param string|null $value
     */
    public function frequencyInd(?string $value): self
    {
        $this->instance->setFrequencyInd($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Purchase object.
     */
    public function build(): Purchase
    {
        return CoreHelper::clone($this->instance);
    }
}
