<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Data;

/**
 * Builder for model Data
 *
 * @see Data
 */
class DataBuilder
{
    /**
     * @var Data
     */
    private $instance;

    private function __construct(Data $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Data Builder object.
     */
    public static function init(): self
    {
        return new self(new Data());
    }

    /**
     * Sets code field.
     *
     * @param string|null $value
     */
    public function code(?string $value): self
    {
        $this->instance->setCode($value);
        return $this;
    }

    /**
     * Sets type field.
     *
     * @param string|null $value
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets progress field.
     *
     * @param int|null $value
     */
    public function progress(?int $value): self
    {
        $this->instance->setProgress($value);
        return $this;
    }

    /**
     * Sets error field.
     *
     * @param string|null $value
     */
    public function error(?string $value): self
    {
        $this->instance->setError($value);
        return $this;
    }

    /**
     * Unsets error field.
     */
    public function unsetError(): self
    {
        $this->instance->unsetError();
        return $this;
    }

    /**
     * Sets ttl field.
     *
     * @param int|null $value
     */
    public function ttl(?int $value): self
    {
        $this->instance->setTtl($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Data object.
     */
    public function build(): Data
    {
        return CoreHelper::clone($this->instance);
    }
}
