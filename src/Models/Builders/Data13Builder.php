<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Data13;

/**
 * Builder for model Data13
 *
 * @see Data13
 */
class Data13Builder
{
    /**
     * @var Data13
     */
    private $instance;

    private function __construct(Data13 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Data 13 Builder object.
     */
    public static function init(): self
    {
        return new self(new Data13());
    }

    /**
     * Sets three ds server trans id field.
     *
     * @param string|null $value
     */
    public function threeDsServerTransId(?string $value): self
    {
        $this->instance->setThreeDsServerTransId($value);
        return $this;
    }

    /**
     * Sets transaction status field.
     *
     * @param string|null $value
     */
    public function transactionStatus(?string $value): self
    {
        $this->instance->setTransactionStatus($value);
        return $this;
    }

    /**
     * Sets ds trans id field.
     *
     * @param string|null $value
     */
    public function dsTransId(?string $value): self
    {
        $this->instance->setDsTransId($value);
        return $this;
    }

    /**
     * Sets acs trans id field.
     *
     * @param string|null $value
     */
    public function acsTransId(?string $value): self
    {
        $this->instance->setAcsTransId($value);
        return $this;
    }

    /**
     * Sets message version field.
     *
     * @param string|null $value
     */
    public function messageVersion(?string $value): self
    {
        $this->instance->setMessageVersion($value);
        return $this;
    }

    /**
     * Sets authentication value field.
     *
     * @param string|null $value
     */
    public function authenticationValue(?string $value): self
    {
        $this->instance->setAuthenticationValue($value);
        return $this;
    }

    /**
     * Sets eci field.
     *
     * @param string|null $value
     */
    public function eci(?string $value): self
    {
        $this->instance->setEci($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Data 13 object.
     */
    public function build(): Data13
    {
        return CoreHelper::clone($this->instance);
    }
}
