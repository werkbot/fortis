<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\ProductRecurring;

/**
 * Builder for model ProductRecurring
 *
 * @see ProductRecurring
 */
class ProductRecurringBuilder
{
    /**
     * @var ProductRecurring
     */
    private $instance;

    private function __construct(ProductRecurring $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Product Recurring Builder object.
     */
    public static function init(): self
    {
        return new self(new ProductRecurring());
    }

    /**
     * Sets title field.
     *
     * @param string|null $value
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Sets location id field.
     *
     * @param string|null $value
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Sets location api id field.
     *
     * @param string|null $value
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets send declined notifications field.
     *
     * @param bool|null $value
     */
    public function sendDeclinedNotifications(?bool $value): self
    {
        $this->instance->setSendDeclinedNotifications($value);
        return $this;
    }

    /**
     * Sets require full payment field.
     *
     * @param bool|null $value
     */
    public function requireFullPayment(?bool $value): self
    {
        $this->instance->setRequireFullPayment($value);
        return $this;
    }

    /**
     * Sets expire notification email enable field.
     *
     * @param bool|null $value
     */
    public function expireNotificationEmailEnable(?bool $value): self
    {
        $this->instance->setExpireNotificationEmailEnable($value);
        return $this;
    }

    /**
     * Sets expire notification sms enable field.
     *
     * @param bool|null $value
     */
    public function expireNotificationSmsEnable(?bool $value): self
    {
        $this->instance->setExpireNotificationSmsEnable($value);
        return $this;
    }

    /**
     * Sets notification days default field.
     *
     * @param int|null $value
     */
    public function notificationDaysDefault(?int $value): self
    {
        $this->instance->setNotificationDaysDefault($value);
        return $this;
    }

    /**
     * Unsets notification days default field.
     */
    public function unsetNotificationDaysDefault(): self
    {
        $this->instance->unsetNotificationDaysDefault();
        return $this;
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets created ts field.
     *
     * @param int|null $value
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets modified ts field.
     *
     * @param int|null $value
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Sets created user id field.
     *
     * @param string|null $value
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     *
     * @param string|null $value
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Unsets modified user id field.
     */
    public function unsetModifiedUserId(): self
    {
        $this->instance->unsetModifiedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Product Recurring object.
     */
    public function build(): ProductRecurring
    {
        return CoreHelper::clone($this->instance);
    }
}
