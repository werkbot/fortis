<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\AdditionalAmount;
use FortisAPILib\Models\BillingAddress1;
use FortisAPILib\Models\EmvReceiptData;
use FortisAPILib\Models\IdentityVerification;
use FortisAPILib\Models\Transaction;

/**
 * Builder for model Transaction
 *
 * @see Transaction
 */
class TransactionBuilder
{
    /**
     * @var Transaction
     */
    private $instance;

    private function __construct(Transaction $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Transaction Builder object.
     */
    public static function init(): self
    {
        return new self(new Transaction());
    }

    /**
     * Sets additional amounts field.
     *
     * @param AdditionalAmount[]|null $value
     */
    public function additionalAmounts(?array $value): self
    {
        $this->instance->setAdditionalAmounts($value);
        return $this;
    }

    /**
     * Sets billing address field.
     *
     * @param BillingAddress1|null $value
     */
    public function billingAddress(?BillingAddress1 $value): self
    {
        $this->instance->setBillingAddress($value);
        return $this;
    }

    /**
     * Sets checkin date field.
     *
     * @param string|null $value
     */
    public function checkinDate(?string $value): self
    {
        $this->instance->setCheckinDate($value);
        return $this;
    }

    /**
     * Unsets checkin date field.
     */
    public function unsetCheckinDate(): self
    {
        $this->instance->unsetCheckinDate();
        return $this;
    }

    /**
     * Sets checkout date field.
     *
     * @param string|null $value
     */
    public function checkoutDate(?string $value): self
    {
        $this->instance->setCheckoutDate($value);
        return $this;
    }

    /**
     * Unsets checkout date field.
     */
    public function unsetCheckoutDate(): self
    {
        $this->instance->unsetCheckoutDate();
        return $this;
    }

    /**
     * Sets clerk number field.
     *
     * @param string|null $value
     */
    public function clerkNumber(?string $value): self
    {
        $this->instance->setClerkNumber($value);
        return $this;
    }

    /**
     * Unsets clerk number field.
     */
    public function unsetClerkNumber(): self
    {
        $this->instance->unsetClerkNumber();
        return $this;
    }

    /**
     * Sets contact api id field.
     *
     * @param string|null $value
     */
    public function contactApiId(?string $value): self
    {
        $this->instance->setContactApiId($value);
        return $this;
    }

    /**
     * Unsets contact api id field.
     */
    public function unsetContactApiId(): self
    {
        $this->instance->unsetContactApiId();
        return $this;
    }

    /**
     * Sets contact id field.
     *
     * @param string|null $value
     */
    public function contactId(?string $value): self
    {
        $this->instance->setContactId($value);
        return $this;
    }

    /**
     * Unsets contact id field.
     */
    public function unsetContactId(): self
    {
        $this->instance->unsetContactId();
        return $this;
    }

    /**
     * Sets custom data field.
     *
     * @param array|null $value
     */
    public function customData(?array $value): self
    {
        $this->instance->setCustomData($value);
        return $this;
    }

    /**
     * Sets customer id field.
     *
     * @param string|null $value
     */
    public function customerId(?string $value): self
    {
        $this->instance->setCustomerId($value);
        return $this;
    }

    /**
     * Unsets customer id field.
     */
    public function unsetCustomerId(): self
    {
        $this->instance->unsetCustomerId();
        return $this;
    }

    /**
     * Sets description field.
     *
     * @param string|null $value
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets identity verification field.
     *
     * @param IdentityVerification|null $value
     */
    public function identityVerification(?IdentityVerification $value): self
    {
        $this->instance->setIdentityVerification($value);
        return $this;
    }

    /**
     * Sets iias ind field.
     *
     * @param int|null $value
     */
    public function iiasInd(?int $value): self
    {
        $this->instance->setIiasInd($value);
        return $this;
    }

    /**
     * Unsets iias ind field.
     */
    public function unsetIiasInd(): self
    {
        $this->instance->unsetIiasInd();
        return $this;
    }

    /**
     * Sets image front field.
     *
     * @param string|null $value
     */
    public function imageFront(?string $value): self
    {
        $this->instance->setImageFront($value);
        return $this;
    }

    /**
     * Unsets image front field.
     */
    public function unsetImageFront(): self
    {
        $this->instance->unsetImageFront();
        return $this;
    }

    /**
     * Sets image back field.
     *
     * @param string|null $value
     */
    public function imageBack(?string $value): self
    {
        $this->instance->setImageBack($value);
        return $this;
    }

    /**
     * Unsets image back field.
     */
    public function unsetImageBack(): self
    {
        $this->instance->unsetImageBack();
        return $this;
    }

    /**
     * Sets installment field.
     *
     * @param bool|null $value
     */
    public function installment(?bool $value): self
    {
        $this->instance->setInstallment($value);
        return $this;
    }

    /**
     * Sets installment number field.
     *
     * @param int|null $value
     */
    public function installmentNumber(?int $value): self
    {
        $this->instance->setInstallmentNumber($value);
        return $this;
    }

    /**
     * Unsets installment number field.
     */
    public function unsetInstallmentNumber(): self
    {
        $this->instance->unsetInstallmentNumber();
        return $this;
    }

    /**
     * Sets installment count field.
     *
     * @param int|null $value
     */
    public function installmentCount(?int $value): self
    {
        $this->instance->setInstallmentCount($value);
        return $this;
    }

    /**
     * Unsets installment count field.
     */
    public function unsetInstallmentCount(): self
    {
        $this->instance->unsetInstallmentCount();
        return $this;
    }

    /**
     * Sets recurring flag field.
     *
     * @param string|null $value
     */
    public function recurringFlag(?string $value): self
    {
        $this->instance->setRecurringFlag($value);
        return $this;
    }

    /**
     * Unsets recurring flag field.
     */
    public function unsetRecurringFlag(): self
    {
        $this->instance->unsetRecurringFlag();
        return $this;
    }

    /**
     * Sets installment counter field.
     *
     * @param int|null $value
     */
    public function installmentCounter(?int $value): self
    {
        $this->instance->setInstallmentCounter($value);
        return $this;
    }

    /**
     * Unsets installment counter field.
     */
    public function unsetInstallmentCounter(): self
    {
        $this->instance->unsetInstallmentCounter();
        return $this;
    }

    /**
     * Sets installment total field.
     *
     * @param int|null $value
     */
    public function installmentTotal(?int $value): self
    {
        $this->instance->setInstallmentTotal($value);
        return $this;
    }

    /**
     * Unsets installment total field.
     */
    public function unsetInstallmentTotal(): self
    {
        $this->instance->unsetInstallmentTotal();
        return $this;
    }

    /**
     * Sets subscription field.
     *
     * @param bool|null $value
     */
    public function subscription(?bool $value): self
    {
        $this->instance->setSubscription($value);
        return $this;
    }

    /**
     * Sets standing order field.
     *
     * @param bool|null $value
     */
    public function standingOrder(?bool $value): self
    {
        $this->instance->setStandingOrder($value);
        return $this;
    }

    /**
     * Sets location api id field.
     *
     * @param string|null $value
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets location id field.
     *
     * @param string|null $value
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Unsets location id field.
     */
    public function unsetLocationId(): self
    {
        $this->instance->unsetLocationId();
        return $this;
    }

    /**
     * Sets product transaction id field.
     *
     * @param string|null $value
     */
    public function productTransactionId(?string $value): self
    {
        $this->instance->setProductTransactionId($value);
        return $this;
    }

    /**
     * Unsets product transaction id field.
     */
    public function unsetProductTransactionId(): self
    {
        $this->instance->unsetProductTransactionId();
        return $this;
    }

    /**
     * Sets advance deposit field.
     *
     * @param bool|null $value
     */
    public function advanceDeposit(?bool $value): self
    {
        $this->instance->setAdvanceDeposit($value);
        return $this;
    }

    /**
     * Sets no show field.
     *
     * @param bool|null $value
     */
    public function noShow(?bool $value): self
    {
        $this->instance->setNoShow($value);
        return $this;
    }

    /**
     * Sets notification email address field.
     *
     * @param string|null $value
     */
    public function notificationEmailAddress(?string $value): self
    {
        $this->instance->setNotificationEmailAddress($value);
        return $this;
    }

    /**
     * Unsets notification email address field.
     */
    public function unsetNotificationEmailAddress(): self
    {
        $this->instance->unsetNotificationEmailAddress();
        return $this;
    }

    /**
     * Sets order number field.
     *
     * @param string|null $value
     */
    public function orderNumber(?string $value): self
    {
        $this->instance->setOrderNumber($value);
        return $this;
    }

    /**
     * Unsets order number field.
     */
    public function unsetOrderNumber(): self
    {
        $this->instance->unsetOrderNumber();
        return $this;
    }

    /**
     * Sets po number field.
     *
     * @param string|null $value
     */
    public function poNumber(?string $value): self
    {
        $this->instance->setPoNumber($value);
        return $this;
    }

    /**
     * Unsets po number field.
     */
    public function unsetPoNumber(): self
    {
        $this->instance->unsetPoNumber();
        return $this;
    }

    /**
     * Sets quick invoice id field.
     *
     * @param string|null $value
     */
    public function quickInvoiceId(?string $value): self
    {
        $this->instance->setQuickInvoiceId($value);
        return $this;
    }

    /**
     * Unsets quick invoice id field.
     */
    public function unsetQuickInvoiceId(): self
    {
        $this->instance->unsetQuickInvoiceId();
        return $this;
    }

    /**
     * Sets recurring field.
     *
     * @param bool|null $value
     */
    public function recurring(?bool $value): self
    {
        $this->instance->setRecurring($value);
        return $this;
    }

    /**
     * Sets recurring number field.
     *
     * @param int|null $value
     */
    public function recurringNumber(?int $value): self
    {
        $this->instance->setRecurringNumber($value);
        return $this;
    }

    /**
     * Unsets recurring number field.
     */
    public function unsetRecurringNumber(): self
    {
        $this->instance->unsetRecurringNumber();
        return $this;
    }

    /**
     * Sets room num field.
     *
     * @param string|null $value
     */
    public function roomNum(?string $value): self
    {
        $this->instance->setRoomNum($value);
        return $this;
    }

    /**
     * Unsets room num field.
     */
    public function unsetRoomNum(): self
    {
        $this->instance->unsetRoomNum();
        return $this;
    }

    /**
     * Sets room rate field.
     *
     * @param int|null $value
     */
    public function roomRate(?int $value): self
    {
        $this->instance->setRoomRate($value);
        return $this;
    }

    /**
     * Unsets room rate field.
     */
    public function unsetRoomRate(): self
    {
        $this->instance->unsetRoomRate();
        return $this;
    }

    /**
     * Sets save account field.
     *
     * @param bool|null $value
     */
    public function saveAccount(?bool $value): self
    {
        $this->instance->setSaveAccount($value);
        return $this;
    }

    /**
     * Sets save account title field.
     *
     * @param string|null $value
     */
    public function saveAccountTitle(?string $value): self
    {
        $this->instance->setSaveAccountTitle($value);
        return $this;
    }

    /**
     * Unsets save account title field.
     */
    public function unsetSaveAccountTitle(): self
    {
        $this->instance->unsetSaveAccountTitle();
        return $this;
    }

    /**
     * Sets subtotal amount field.
     *
     * @param int|null $value
     */
    public function subtotalAmount(?int $value): self
    {
        $this->instance->setSubtotalAmount($value);
        return $this;
    }

    /**
     * Unsets subtotal amount field.
     */
    public function unsetSubtotalAmount(): self
    {
        $this->instance->unsetSubtotalAmount();
        return $this;
    }

    /**
     * Sets surcharge amount field.
     *
     * @param int|null $value
     */
    public function surchargeAmount(?int $value): self
    {
        $this->instance->setSurchargeAmount($value);
        return $this;
    }

    /**
     * Unsets surcharge amount field.
     */
    public function unsetSurchargeAmount(): self
    {
        $this->instance->unsetSurchargeAmount();
        return $this;
    }

    /**
     * Sets tags field.
     *
     * @param string[]|null $value
     */
    public function tags(?array $value): self
    {
        $this->instance->setTags($value);
        return $this;
    }

    /**
     * Unsets tags field.
     */
    public function unsetTags(): self
    {
        $this->instance->unsetTags();
        return $this;
    }

    /**
     * Sets tax field.
     *
     * @param int|null $value
     */
    public function tax(?int $value): self
    {
        $this->instance->setTax($value);
        return $this;
    }

    /**
     * Unsets tax field.
     */
    public function unsetTax(): self
    {
        $this->instance->unsetTax();
        return $this;
    }

    /**
     * Sets tip amount field.
     *
     * @param int|null $value
     */
    public function tipAmount(?int $value): self
    {
        $this->instance->setTipAmount($value);
        return $this;
    }

    /**
     * Unsets tip amount field.
     */
    public function unsetTipAmount(): self
    {
        $this->instance->unsetTipAmount();
        return $this;
    }

    /**
     * Sets transaction amount field.
     *
     * @param int|null $value
     */
    public function transactionAmount(?int $value): self
    {
        $this->instance->setTransactionAmount($value);
        return $this;
    }

    /**
     * Unsets transaction amount field.
     */
    public function unsetTransactionAmount(): self
    {
        $this->instance->unsetTransactionAmount();
        return $this;
    }

    /**
     * Sets secondary amount field.
     *
     * @param int|null $value
     */
    public function secondaryAmount(?int $value): self
    {
        $this->instance->setSecondaryAmount($value);
        return $this;
    }

    /**
     * Unsets secondary amount field.
     */
    public function unsetSecondaryAmount(): self
    {
        $this->instance->unsetSecondaryAmount();
        return $this;
    }

    /**
     * Sets transaction api id field.
     *
     * @param string|null $value
     */
    public function transactionApiId(?string $value): self
    {
        $this->instance->setTransactionApiId($value);
        return $this;
    }

    /**
     * Unsets transaction api id field.
     */
    public function unsetTransactionApiId(): self
    {
        $this->instance->unsetTransactionApiId();
        return $this;
    }

    /**
     * Sets transaction c 1 field.
     *
     * @param string|null $value
     */
    public function transactionC1(?string $value): self
    {
        $this->instance->setTransactionC1($value);
        return $this;
    }

    /**
     * Unsets transaction c 1 field.
     */
    public function unsetTransactionC1(): self
    {
        $this->instance->unsetTransactionC1();
        return $this;
    }

    /**
     * Sets transaction c 2 field.
     *
     * @param string|null $value
     */
    public function transactionC2(?string $value): self
    {
        $this->instance->setTransactionC2($value);
        return $this;
    }

    /**
     * Unsets transaction c 2 field.
     */
    public function unsetTransactionC2(): self
    {
        $this->instance->unsetTransactionC2();
        return $this;
    }

    /**
     * Sets transaction c 3 field.
     *
     * @param string|null $value
     */
    public function transactionC3(?string $value): self
    {
        $this->instance->setTransactionC3($value);
        return $this;
    }

    /**
     * Unsets transaction c 3 field.
     */
    public function unsetTransactionC3(): self
    {
        $this->instance->unsetTransactionC3();
        return $this;
    }

    /**
     * Sets bank funded only override field.
     *
     * @param bool|null $value
     */
    public function bankFundedOnlyOverride(?bool $value): self
    {
        $this->instance->setBankFundedOnlyOverride($value);
        return $this;
    }

    /**
     * Sets allow partial authorization override field.
     *
     * @param bool|null $value
     */
    public function allowPartialAuthorizationOverride(?bool $value): self
    {
        $this->instance->setAllowPartialAuthorizationOverride($value);
        return $this;
    }

    /**
     * Sets auto decline cvv override field.
     *
     * @param bool|null $value
     */
    public function autoDeclineCvvOverride(?bool $value): self
    {
        $this->instance->setAutoDeclineCvvOverride($value);
        return $this;
    }

    /**
     * Sets auto decline street override field.
     *
     * @param bool|null $value
     */
    public function autoDeclineStreetOverride(?bool $value): self
    {
        $this->instance->setAutoDeclineStreetOverride($value);
        return $this;
    }

    /**
     * Sets auto decline zip override field.
     *
     * @param bool|null $value
     */
    public function autoDeclineZipOverride(?bool $value): self
    {
        $this->instance->setAutoDeclineZipOverride($value);
        return $this;
    }

    /**
     * Sets ebt type field.
     *
     * @param string|null $value
     */
    public function ebtType(?string $value): self
    {
        $this->instance->setEbtType($value);
        return $this;
    }

    /**
     * Unsets ebt type field.
     */
    public function unsetEbtType(): self
    {
        $this->instance->unsetEbtType();
        return $this;
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets created ts field.
     *
     * @param int|null $value
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets modified ts field.
     *
     * @param int|null $value
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Sets terminal id field.
     *
     * @param string|null $value
     */
    public function terminalId(?string $value): self
    {
        $this->instance->setTerminalId($value);
        return $this;
    }

    /**
     * Unsets terminal id field.
     */
    public function unsetTerminalId(): self
    {
        $this->instance->unsetTerminalId();
        return $this;
    }

    /**
     * Sets account holder name field.
     *
     * @param string|null $value
     */
    public function accountHolderName(?string $value): self
    {
        $this->instance->setAccountHolderName($value);
        return $this;
    }

    /**
     * Unsets account holder name field.
     */
    public function unsetAccountHolderName(): self
    {
        $this->instance->unsetAccountHolderName();
        return $this;
    }

    /**
     * Sets account type field.
     *
     * @param string|null $value
     */
    public function accountType(?string $value): self
    {
        $this->instance->setAccountType($value);
        return $this;
    }

    /**
     * Unsets account type field.
     */
    public function unsetAccountType(): self
    {
        $this->instance->unsetAccountType();
        return $this;
    }

    /**
     * Sets token api id field.
     *
     * @param string|null $value
     */
    public function tokenApiId(?string $value): self
    {
        $this->instance->setTokenApiId($value);
        return $this;
    }

    /**
     * Unsets token api id field.
     */
    public function unsetTokenApiId(): self
    {
        $this->instance->unsetTokenApiId();
        return $this;
    }

    /**
     * Sets token id field.
     *
     * @param string|null $value
     */
    public function tokenId(?string $value): self
    {
        $this->instance->setTokenId($value);
        return $this;
    }

    /**
     * Unsets token id field.
     */
    public function unsetTokenId(): self
    {
        $this->instance->unsetTokenId();
        return $this;
    }

    /**
     * Sets ach identifier field.
     *
     * @param string|null $value
     */
    public function achIdentifier(?string $value): self
    {
        $this->instance->setAchIdentifier($value);
        return $this;
    }

    /**
     * Unsets ach identifier field.
     */
    public function unsetAchIdentifier(): self
    {
        $this->instance->unsetAchIdentifier();
        return $this;
    }

    /**
     * Sets ach sec code field.
     *
     * @param string|null $value
     */
    public function achSecCode(?string $value): self
    {
        $this->instance->setAchSecCode($value);
        return $this;
    }

    /**
     * Unsets ach sec code field.
     */
    public function unsetAchSecCode(): self
    {
        $this->instance->unsetAchSecCode();
        return $this;
    }

    /**
     * Sets auth amount field.
     *
     * @param int|null $value
     */
    public function authAmount(?int $value): self
    {
        $this->instance->setAuthAmount($value);
        return $this;
    }

    /**
     * Unsets auth amount field.
     */
    public function unsetAuthAmount(): self
    {
        $this->instance->unsetAuthAmount();
        return $this;
    }

    /**
     * Sets auth code field.
     *
     * @param string|null $value
     */
    public function authCode(?string $value): self
    {
        $this->instance->setAuthCode($value);
        return $this;
    }

    /**
     * Unsets auth code field.
     */
    public function unsetAuthCode(): self
    {
        $this->instance->unsetAuthCode();
        return $this;
    }

    /**
     * Sets avs field.
     *
     * @param string|null $value
     */
    public function avs(?string $value): self
    {
        $this->instance->setAvs($value);
        return $this;
    }

    /**
     * Unsets avs field.
     */
    public function unsetAvs(): self
    {
        $this->instance->unsetAvs();
        return $this;
    }

    /**
     * Sets avs enhanced field.
     *
     * @param string|null $value
     */
    public function avsEnhanced(?string $value): self
    {
        $this->instance->setAvsEnhanced($value);
        return $this;
    }

    /**
     * Unsets avs enhanced field.
     */
    public function unsetAvsEnhanced(): self
    {
        $this->instance->unsetAvsEnhanced();
        return $this;
    }

    /**
     * Sets cardholder present field.
     *
     * @param bool|null $value
     */
    public function cardholderPresent(?bool $value): self
    {
        $this->instance->setCardholderPresent($value);
        return $this;
    }

    /**
     * Sets card present field.
     *
     * @param bool|null $value
     */
    public function cardPresent(?bool $value): self
    {
        $this->instance->setCardPresent($value);
        return $this;
    }

    /**
     * Sets check number field.
     *
     * @param string|null $value
     */
    public function checkNumber(?string $value): self
    {
        $this->instance->setCheckNumber($value);
        return $this;
    }

    /**
     * Unsets check number field.
     */
    public function unsetCheckNumber(): self
    {
        $this->instance->unsetCheckNumber();
        return $this;
    }

    /**
     * Sets customer ip field.
     *
     * @param string|null $value
     */
    public function customerIp(?string $value): self
    {
        $this->instance->setCustomerIp($value);
        return $this;
    }

    /**
     * Unsets customer ip field.
     */
    public function unsetCustomerIp(): self
    {
        $this->instance->unsetCustomerIp();
        return $this;
    }

    /**
     * Sets cvv response field.
     *
     * @param string|null $value
     */
    public function cvvResponse(?string $value): self
    {
        $this->instance->setCvvResponse($value);
        return $this;
    }

    /**
     * Unsets cvv response field.
     */
    public function unsetCvvResponse(): self
    {
        $this->instance->unsetCvvResponse();
        return $this;
    }

    /**
     * Sets entry mode id field.
     *
     * @param string|null $value
     */
    public function entryModeId(?string $value): self
    {
        $this->instance->setEntryModeId($value);
        return $this;
    }

    /**
     * Unsets entry mode id field.
     */
    public function unsetEntryModeId(): self
    {
        $this->instance->unsetEntryModeId();
        return $this;
    }

    /**
     * Sets emv receipt data field.
     *
     * @param EmvReceiptData|null $value
     */
    public function emvReceiptData(?EmvReceiptData $value): self
    {
        $this->instance->setEmvReceiptData($value);
        return $this;
    }

    /**
     * Unsets emv receipt data field.
     */
    public function unsetEmvReceiptData(): self
    {
        $this->instance->unsetEmvReceiptData();
        return $this;
    }

    /**
     * Sets first six field.
     *
     * @param string|null $value
     */
    public function firstSix(?string $value): self
    {
        $this->instance->setFirstSix($value);
        return $this;
    }

    /**
     * Unsets first six field.
     */
    public function unsetFirstSix(): self
    {
        $this->instance->unsetFirstSix();
        return $this;
    }

    /**
     * Sets last four field.
     *
     * @param string|null $value
     */
    public function lastFour(?string $value): self
    {
        $this->instance->setLastFour($value);
        return $this;
    }

    /**
     * Unsets last four field.
     */
    public function unsetLastFour(): self
    {
        $this->instance->unsetLastFour();
        return $this;
    }

    /**
     * Sets payment method field.
     *
     * @param string|null $value
     */
    public function paymentMethod(?string $value): self
    {
        $this->instance->setPaymentMethod($value);
        return $this;
    }

    /**
     * Sets terminal serial number field.
     *
     * @param string|null $value
     */
    public function terminalSerialNumber(?string $value): self
    {
        $this->instance->setTerminalSerialNumber($value);
        return $this;
    }

    /**
     * Unsets terminal serial number field.
     */
    public function unsetTerminalSerialNumber(): self
    {
        $this->instance->unsetTerminalSerialNumber();
        return $this;
    }

    /**
     * Sets transaction settlement status field.
     *
     * @param string|null $value
     */
    public function transactionSettlementStatus(?string $value): self
    {
        $this->instance->setTransactionSettlementStatus($value);
        return $this;
    }

    /**
     * Unsets transaction settlement status field.
     */
    public function unsetTransactionSettlementStatus(): self
    {
        $this->instance->unsetTransactionSettlementStatus();
        return $this;
    }

    /**
     * Sets charge back date field.
     *
     * @param string|null $value
     */
    public function chargeBackDate(?string $value): self
    {
        $this->instance->setChargeBackDate($value);
        return $this;
    }

    /**
     * Unsets charge back date field.
     */
    public function unsetChargeBackDate(): self
    {
        $this->instance->unsetChargeBackDate();
        return $this;
    }

    /**
     * Sets is recurring field.
     *
     * @param bool|null $value
     */
    public function isRecurring(?bool $value): self
    {
        $this->instance->setIsRecurring($value);
        return $this;
    }

    /**
     * Sets notification email sent field.
     *
     * @param bool|null $value
     */
    public function notificationEmailSent(?bool $value): self
    {
        $this->instance->setNotificationEmailSent($value);
        return $this;
    }

    /**
     * Sets par field.
     *
     * @param string|null $value
     */
    public function par(?string $value): self
    {
        $this->instance->setPar($value);
        return $this;
    }

    /**
     * Unsets par field.
     */
    public function unsetPar(): self
    {
        $this->instance->unsetPar();
        return $this;
    }

    /**
     * Sets reason code id field.
     *
     * @param int|null $value
     */
    public function reasonCodeId(?int $value): self
    {
        $this->instance->setReasonCodeId($value);
        return $this;
    }

    /**
     * Unsets reason code id field.
     */
    public function unsetReasonCodeId(): self
    {
        $this->instance->unsetReasonCodeId();
        return $this;
    }

    /**
     * Sets recurring id field.
     *
     * @param string|null $value
     */
    public function recurringId(?string $value): self
    {
        $this->instance->setRecurringId($value);
        return $this;
    }

    /**
     * Unsets recurring id field.
     */
    public function unsetRecurringId(): self
    {
        $this->instance->unsetRecurringId();
        return $this;
    }

    /**
     * Sets settle date field.
     *
     * @param string|null $value
     */
    public function settleDate(?string $value): self
    {
        $this->instance->setSettleDate($value);
        return $this;
    }

    /**
     * Unsets settle date field.
     */
    public function unsetSettleDate(): self
    {
        $this->instance->unsetSettleDate();
        return $this;
    }

    /**
     * Sets status code field.
     *
     * @param int|null $value
     */
    public function statusCode(?int $value): self
    {
        $this->instance->setStatusCode($value);
        return $this;
    }

    /**
     * Unsets status code field.
     */
    public function unsetStatusCode(): self
    {
        $this->instance->unsetStatusCode();
        return $this;
    }

    /**
     * Sets transaction batch id field.
     *
     * @param string|null $value
     */
    public function transactionBatchId(?string $value): self
    {
        $this->instance->setTransactionBatchId($value);
        return $this;
    }

    /**
     * Unsets transaction batch id field.
     */
    public function unsetTransactionBatchId(): self
    {
        $this->instance->unsetTransactionBatchId();
        return $this;
    }

    /**
     * Sets type id field.
     *
     * @param int|null $value
     */
    public function typeId(?int $value): self
    {
        $this->instance->setTypeId($value);
        return $this;
    }

    /**
     * Unsets type id field.
     */
    public function unsetTypeId(): self
    {
        $this->instance->unsetTypeId();
        return $this;
    }

    /**
     * Sets verbiage field.
     *
     * @param string|null $value
     */
    public function verbiage(?string $value): self
    {
        $this->instance->setVerbiage($value);
        return $this;
    }

    /**
     * Unsets verbiage field.
     */
    public function unsetVerbiage(): self
    {
        $this->instance->unsetVerbiage();
        return $this;
    }

    /**
     * Sets voucher number field.
     *
     * @param string|null $value
     */
    public function voucherNumber(?string $value): self
    {
        $this->instance->setVoucherNumber($value);
        return $this;
    }

    /**
     * Unsets voucher number field.
     */
    public function unsetVoucherNumber(): self
    {
        $this->instance->unsetVoucherNumber();
        return $this;
    }

    /**
     * Sets void date field.
     *
     * @param string|null $value
     */
    public function voidDate(?string $value): self
    {
        $this->instance->setVoidDate($value);
        return $this;
    }

    /**
     * Unsets void date field.
     */
    public function unsetVoidDate(): self
    {
        $this->instance->unsetVoidDate();
        return $this;
    }

    /**
     * Sets batch field.
     *
     * @param string|null $value
     */
    public function batch(?string $value): self
    {
        $this->instance->setBatch($value);
        return $this;
    }

    /**
     * Unsets batch field.
     */
    public function unsetBatch(): self
    {
        $this->instance->unsetBatch();
        return $this;
    }

    /**
     * Sets terms agree field.
     *
     * @param bool|null $value
     */
    public function termsAgree(?bool $value): self
    {
        $this->instance->setTermsAgree($value);
        return $this;
    }

    /**
     * Sets response message field.
     *
     * @param string|null $value
     */
    public function responseMessage(?string $value): self
    {
        $this->instance->setResponseMessage($value);
        return $this;
    }

    /**
     * Unsets response message field.
     */
    public function unsetResponseMessage(): self
    {
        $this->instance->unsetResponseMessage();
        return $this;
    }

    /**
     * Sets return date field.
     *
     * @param string|null $value
     */
    public function returnDate(?string $value): self
    {
        $this->instance->setReturnDate($value);
        return $this;
    }

    /**
     * Unsets return date field.
     */
    public function unsetReturnDate(): self
    {
        $this->instance->unsetReturnDate();
        return $this;
    }

    /**
     * Sets trx source id field.
     *
     * @param int|null $value
     */
    public function trxSourceId(?int $value): self
    {
        $this->instance->setTrxSourceId($value);
        return $this;
    }

    /**
     * Unsets trx source id field.
     */
    public function unsetTrxSourceId(): self
    {
        $this->instance->unsetTrxSourceId();
        return $this;
    }

    /**
     * Sets routing number field.
     *
     * @param string|null $value
     */
    public function routingNumber(?string $value): self
    {
        $this->instance->setRoutingNumber($value);
        return $this;
    }

    /**
     * Unsets routing number field.
     */
    public function unsetRoutingNumber(): self
    {
        $this->instance->unsetRoutingNumber();
        return $this;
    }

    /**
     * Sets trx source code field.
     *
     * @param int|null $value
     */
    public function trxSourceCode(?int $value): self
    {
        $this->instance->setTrxSourceCode($value);
        return $this;
    }

    /**
     * Unsets trx source code field.
     */
    public function unsetTrxSourceCode(): self
    {
        $this->instance->unsetTrxSourceCode();
        return $this;
    }

    /**
     * Sets paylink id field.
     *
     * @param string|null $value
     */
    public function paylinkId(?string $value): self
    {
        $this->instance->setPaylinkId($value);
        return $this;
    }

    /**
     * Unsets paylink id field.
     */
    public function unsetPaylinkId(): self
    {
        $this->instance->unsetPaylinkId();
        return $this;
    }

    /**
     * Sets currency code field.
     *
     * @param float|null $value
     */
    public function currencyCode(?float $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets is accountvault field.
     *
     * @param bool|null $value
     */
    public function isAccountvault(?bool $value): self
    {
        $this->instance->setIsAccountvault($value);
        return $this;
    }

    /**
     * Sets created user id field.
     *
     * @param string|null $value
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     *
     * @param string|null $value
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Sets transaction code field.
     *
     * @param string|null $value
     */
    public function transactionCode(?string $value): self
    {
        $this->instance->setTransactionCode($value);
        return $this;
    }

    /**
     * Unsets transaction code field.
     */
    public function unsetTransactionCode(): self
    {
        $this->instance->unsetTransactionCode();
        return $this;
    }

    /**
     * Sets effective date field.
     *
     * @param string|null $value
     */
    public function effectiveDate(?string $value): self
    {
        $this->instance->setEffectiveDate($value);
        return $this;
    }

    /**
     * Unsets effective date field.
     */
    public function unsetEffectiveDate(): self
    {
        $this->instance->unsetEffectiveDate();
        return $this;
    }

    /**
     * Sets notification phone field.
     *
     * @param string|null $value
     */
    public function notificationPhone(?string $value): self
    {
        $this->instance->setNotificationPhone($value);
        return $this;
    }

    /**
     * Unsets notification phone field.
     */
    public function unsetNotificationPhone(): self
    {
        $this->instance->unsetNotificationPhone();
        return $this;
    }

    /**
     * Sets cavv result field.
     *
     * @param string|null $value
     */
    public function cavvResult(?string $value): self
    {
        $this->instance->setCavvResult($value);
        return $this;
    }

    /**
     * Unsets cavv result field.
     */
    public function unsetCavvResult(): self
    {
        $this->instance->unsetCavvResult();
        return $this;
    }

    /**
     * Sets is token field.
     *
     * @param bool|null $value
     */
    public function isToken(?bool $value): self
    {
        $this->instance->setIsToken($value);
        return $this;
    }

    /**
     * Sets account vault id field.
     *
     * @param string|null $value
     */
    public function accountVaultId(?string $value): self
    {
        $this->instance->setAccountVaultId($value);
        return $this;
    }

    /**
     * Unsets account vault id field.
     */
    public function unsetAccountVaultId(): self
    {
        $this->instance->unsetAccountVaultId();
        return $this;
    }

    /**
     * Sets hosted payment page id field.
     *
     * @param string|null $value
     */
    public function hostedPaymentPageId(?string $value): self
    {
        $this->instance->setHostedPaymentPageId($value);
        return $this;
    }

    /**
     * Sets stan field.
     *
     * @param string|null $value
     */
    public function stan(?string $value): self
    {
        $this->instance->setStan($value);
        return $this;
    }

    /**
     * Unsets stan field.
     */
    public function unsetStan(): self
    {
        $this->instance->unsetStan();
        return $this;
    }

    /**
     * Sets currency field.
     *
     * @param string|null $value
     */
    public function currency(?string $value): self
    {
        $this->instance->setCurrency($value);
        return $this;
    }

    /**
     * Unsets currency field.
     */
    public function unsetCurrency(): self
    {
        $this->instance->unsetCurrency();
        return $this;
    }

    /**
     * Sets card bin field.
     *
     * @param string|null $value
     */
    public function cardBin(?string $value): self
    {
        $this->instance->setCardBin($value);
        return $this;
    }

    /**
     * Unsets card bin field.
     */
    public function unsetCardBin(): self
    {
        $this->instance->unsetCardBin();
        return $this;
    }

    /**
     * Sets wallet type field.
     *
     * @param string|null $value
     */
    public function walletType(?string $value): self
    {
        $this->instance->setWalletType($value);
        return $this;
    }

    /**
     * Unsets wallet type field.
     */
    public function unsetWalletType(): self
    {
        $this->instance->unsetWalletType();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Transaction object.
     */
    public function build(): Transaction
    {
        return CoreHelper::clone($this->instance);
    }
}
