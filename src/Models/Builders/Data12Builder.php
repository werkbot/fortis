<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Data12;

/**
 * Builder for model Data12
 *
 * @see Data12
 */
class Data12Builder
{
    /**
     * @var Data12
     */
    private $instance;

    private function __construct(Data12 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Data 12 Builder object.
     */
    public static function init(): self
    {
        return new self(new Data12());
    }

    /**
     * Sets three ds server trans id field.
     *
     * @param string|null $value
     */
    public function threeDsServerTransId(?string $value): self
    {
        $this->instance->setThreeDsServerTransId($value);
        return $this;
    }

    /**
     * Sets acs url field.
     *
     * @param string|null $value
     */
    public function acsUrl(?string $value): self
    {
        $this->instance->setAcsUrl($value);
        return $this;
    }

    /**
     * Sets transaction status field.
     *
     * @param string|null $value
     */
    public function transactionStatus(?string $value): self
    {
        $this->instance->setTransactionStatus($value);
        return $this;
    }

    /**
     * Sets authentication value field.
     *
     * @param string|null $value
     */
    public function authenticationValue(?string $value): self
    {
        $this->instance->setAuthenticationValue($value);
        return $this;
    }

    /**
     * Sets eci field.
     *
     * @param string|null $value
     */
    public function eci(?string $value): self
    {
        $this->instance->setEci($value);
        return $this;
    }

    /**
     * Sets ds trans id field.
     *
     * @param string|null $value
     */
    public function dsTransId(?string $value): self
    {
        $this->instance->setDsTransId($value);
        return $this;
    }

    /**
     * Sets acs trans id field.
     *
     * @param string|null $value
     */
    public function acsTransId(?string $value): self
    {
        $this->instance->setAcsTransId($value);
        return $this;
    }

    /**
     * Sets message version field.
     *
     * @param string|null $value
     */
    public function messageVersion(?string $value): self
    {
        $this->instance->setMessageVersion($value);
        return $this;
    }

    /**
     * Sets acs challenge mandated field.
     *
     * @param string|null $value
     */
    public function acsChallengeMandated(?string $value): self
    {
        $this->instance->setAcsChallengeMandated($value);
        return $this;
    }

    /**
     * Sets purchase date field.
     *
     * @param string|null $value
     */
    public function purchaseDate(?string $value): self
    {
        $this->instance->setPurchaseDate($value);
        return $this;
    }

    /**
     * Sets base 64 encoded challenge request field.
     *
     * @param string|null $value
     */
    public function base64EncodedChallengeRequest(?string $value): self
    {
        $this->instance->setBase64EncodedChallengeRequest($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Data 12 object.
     */
    public function build(): Data12
    {
        return CoreHelper::clone($this->instance);
    }
}
