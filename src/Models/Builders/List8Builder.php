<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Detail2;
use FortisAPILib\Models\List8;

/**
 * Builder for model List8
 *
 * @see List8
 */
class List8Builder
{
    /**
     * @var List8
     */
    private $instance;

    private function __construct(List8 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new List 8 Builder object.
     */
    public static function init(): self
    {
        return new self(new List8());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Unsets id field.
     */
    public function unsetId(): self
    {
        $this->instance->unsetId();
        return $this;
    }

    /**
     * Sets company id field.
     *
     * @param string|null $value
     */
    public function companyId(?string $value): self
    {
        $this->instance->setCompanyId($value);
        return $this;
    }

    /**
     * Unsets company id field.
     */
    public function unsetCompanyId(): self
    {
        $this->instance->unsetCompanyId();
        return $this;
    }

    /**
     * Sets merchant id field.
     *
     * @param string|null $value
     */
    public function merchantId(?string $value): self
    {
        $this->instance->setMerchantId($value);
        return $this;
    }

    /**
     * Sets service field.
     *
     * @param string|null $value
     */
    public function service(?string $value): self
    {
        $this->instance->setService($value);
        return $this;
    }

    /**
     * Unsets service field.
     */
    public function unsetService(): self
    {
        $this->instance->unsetService();
        return $this;
    }

    /**
     * Sets deposit types field.
     *
     * @param string[]|null $value
     */
    public function depositTypes(?array $value): self
    {
        $this->instance->setDepositTypes($value);
        return $this;
    }

    /**
     * Sets deposit amount field.
     *
     * @param float|null $value
     */
    public function depositAmount(?float $value): self
    {
        $this->instance->setDepositAmount($value);
        return $this;
    }

    /**
     * Sets batch amount field.
     *
     * @param float|null $value
     */
    public function batchAmount(?float $value): self
    {
        $this->instance->setBatchAmount($value);
        return $this;
    }

    /**
     * Sets adjustment amount field.
     *
     * @param float|null $value
     */
    public function adjustmentAmount(?float $value): self
    {
        $this->instance->setAdjustmentAmount($value);
        return $this;
    }

    /**
     * Sets retained amount field.
     *
     * @param float|null $value
     */
    public function retainedAmount(?float $value): self
    {
        $this->instance->setRetainedAmount($value);
        return $this;
    }

    /**
     * Sets conveyed amount field.
     *
     * @param float|null $value
     */
    public function conveyedAmount(?float $value): self
    {
        $this->instance->setConveyedAmount($value);
        return $this;
    }

    /**
     * Sets fee amount field.
     *
     * @param float|null $value
     */
    public function feeAmount(?float $value): self
    {
        $this->instance->setFeeAmount($value);
        return $this;
    }

    /**
     * Sets reference number field.
     *
     * @param string|null $value
     */
    public function referenceNumber(?string $value): self
    {
        $this->instance->setReferenceNumber($value);
        return $this;
    }

    /**
     * Sets trace number field.
     *
     * @param string|null $value
     */
    public function traceNumber(?string $value): self
    {
        $this->instance->setTraceNumber($value);
        return $this;
    }

    /**
     * Unsets trace number field.
     */
    public function unsetTraceNumber(): self
    {
        $this->instance->unsetTraceNumber();
        return $this;
    }

    /**
     * Sets currency field.
     *
     * @param string|null $value
     */
    public function currency(?string $value): self
    {
        $this->instance->setCurrency($value);
        return $this;
    }

    /**
     * Sets created ts field.
     *
     * @param int|null $value
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets reported date field.
     *
     * @param string|null $value
     */
    public function reportedDate(?string $value): self
    {
        $this->instance->setReportedDate($value);
        return $this;
    }

    /**
     * Sets transaction date field.
     *
     * @param string|null $value
     */
    public function transactionDate(?string $value): self
    {
        $this->instance->setTransactionDate($value);
        return $this;
    }

    /**
     * Sets deposit account field.
     *
     * @param string|null $value
     */
    public function depositAccount(?string $value): self
    {
        $this->instance->setDepositAccount($value);
        return $this;
    }

    /**
     * Sets details field.
     *
     * @param Detail2[]|null $value
     */
    public function details(?array $value): self
    {
        $this->instance->setDetails($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new List 8 object.
     */
    public function build(): List8
    {
        return CoreHelper::clone($this->instance);
    }
}
