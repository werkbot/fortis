<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class Field38Enum
{
    public const ID = 'id';

    public const COMPANY_ID = 'company_id';

    public const MERCHANT_ID = 'merchant_id';

    public const SERVICE = 'service';

    public const DEPOSIT_TYPES = 'deposit_types';

    public const DEPOSIT_AMOUNT = 'deposit_amount';

    public const BATCH_AMOUNT = 'batch_amount';

    public const ADJUSTMENT_AMOUNT = 'adjustment_amount';

    public const RETAINED_AMOUNT = 'retained_amount';

    public const CONVEYED_AMOUNT = 'conveyed_amount';

    public const FEE_AMOUNT = 'fee_amount';

    public const REFERENCE_NUMBER = 'reference_number';

    public const TRACE_NUMBER = 'trace_number';

    public const CURRENCY = 'currency';

    public const CREATED_TS = 'created_ts';

    public const REPORTED_DATE = 'reported_date';

    public const TRANSACTION_DATE = 'transaction_date';

    public const DEPOSIT_ACCOUNT = 'deposit_account';

    public const DETAILS = 'details';

    public const LOCATION_ID = 'location_id';

    private const _ALL_VALUES = [
        self::ID,
        self::COMPANY_ID,
        self::MERCHANT_ID,
        self::SERVICE,
        self::DEPOSIT_TYPES,
        self::DEPOSIT_AMOUNT,
        self::BATCH_AMOUNT,
        self::ADJUSTMENT_AMOUNT,
        self::RETAINED_AMOUNT,
        self::CONVEYED_AMOUNT,
        self::FEE_AMOUNT,
        self::REFERENCE_NUMBER,
        self::TRACE_NUMBER,
        self::CURRENCY,
        self::CREATED_TS,
        self::REPORTED_DATE,
        self::TRANSACTION_DATE,
        self::DEPOSIT_ACCOUNT,
        self::DETAILS,
        self::LOCATION_ID
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Field38Enum.");
    }
}
