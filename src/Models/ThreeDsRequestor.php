<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * Contains information for the 3DS Requestor.
 */
class ThreeDsRequestor implements \JsonSerializable
{
    /**
     * @var string
     */
    private $threeDsRequestorAuthenticationInd;

    /**
     * @var ThreeDsRequestorAuthenticationInfo[]|null
     */
    private $threeDsRequestorAuthenticationInfo;

    /**
     * @var string[]|null
     */
    private $threeDsRequestorChallengeInd;

    /**
     * @var ThreeDsRequestorPriorAuthenticationInfo[]|null
     */
    private $threeDsRequestorPriorAuthenticationInfo;

    /**
     * @var string|null
     */
    private $threeDsRequestorDecReqInd;

    /**
     * @var int|null
     */
    private $threeDsRequestorDecMaxTime;

    /**
     * @var string|null
     */
    private $threeDsRequestorSpcSupport;

    /**
     * @var string|null
     */
    private $spcIncompInd;

    /**
     * @param string $threeDsRequestorAuthenticationInd
     */
    public function __construct(string $threeDsRequestorAuthenticationInd)
    {
        $this->threeDsRequestorAuthenticationInd = $threeDsRequestorAuthenticationInd;
    }

    /**
     * Returns Three Ds Requestor Authentication Ind.
     * Indicates the type of Authentication request. This data element provides additional information to
     * the ACS to determine the best approach for handling an authentication request. This value is used
     * for App-based and Browser flows.
     * >01 - Payment transaction
     * >
     * >02 - Recurring transaction
     * >
     * >03 - Installment transaction
     * >
     * >04 - Add card
     * >
     * >05 - Maintain card
     * >
     * >06 - Cardholder verification as part of EMV token ID&V
     * >
     * >07 - Billing agreement
     * >
     * >80 through 99 - can be used for PS-specific values, regardless of protocol version
     * >
     */
    public function getThreeDsRequestorAuthenticationInd(): string
    {
        return $this->threeDsRequestorAuthenticationInd;
    }

    /**
     * Sets Three Ds Requestor Authentication Ind.
     * Indicates the type of Authentication request. This data element provides additional information to
     * the ACS to determine the best approach for handling an authentication request. This value is used
     * for App-based and Browser flows.
     * >01 - Payment transaction
     * >
     * >02 - Recurring transaction
     * >
     * >03 - Installment transaction
     * >
     * >04 - Add card
     * >
     * >05 - Maintain card
     * >
     * >06 - Cardholder verification as part of EMV token ID&V
     * >
     * >07 - Billing agreement
     * >
     * >80 through 99 - can be used for PS-specific values, regardless of protocol version
     * >
     *
     * @required
     * @maps three_ds_requestor_authentication_ind
     * @factory \FortisAPILib\Models\ThreeDsRequestorAuthenticationIndEnum::checkValue
     */
    public function setThreeDsRequestorAuthenticationInd(string $threeDsRequestorAuthenticationInd): void
    {
        $this->threeDsRequestorAuthenticationInd = $threeDsRequestorAuthenticationInd;
    }

    /**
     * Returns Three Ds Requestor Authentication Info.
     * Information about how the 3DS Requestor authenticated the cardholder before or during the
     * transaction.
     *
     * @return ThreeDsRequestorAuthenticationInfo[]|null
     */
    public function getThreeDsRequestorAuthenticationInfo(): ?array
    {
        return $this->threeDsRequestorAuthenticationInfo;
    }

    /**
     * Sets Three Ds Requestor Authentication Info.
     * Information about how the 3DS Requestor authenticated the cardholder before or during the
     * transaction.
     *
     * @maps three_ds_requestor_authentication_info
     *
     * @param ThreeDsRequestorAuthenticationInfo[]|null $threeDsRequestorAuthenticationInfo
     */
    public function setThreeDsRequestorAuthenticationInfo(?array $threeDsRequestorAuthenticationInfo): void
    {
        $this->threeDsRequestorAuthenticationInfo = $threeDsRequestorAuthenticationInfo;
    }

    /**
     * Returns Three Ds Requestor Challenge Ind.
     * Indicates whether a challenge is requested for this transaction. For example: For 01-PA, a 3DS
     * Requestor may have concerns about the transaction, and request a challenge. For 02-NPA, a challenge
     * may be necessary when adding a new card to a wallet.
     *
     * Values "05" through "09" are accepted as well if 3DS Server initiates authentication with EMV 3DS 2.
     * 2.0 version or greater (required protocol version can be set in the preferred_protocol_version
     * field).
     *
     * If the element is not provided, the expected action is that the ACS would interpret as 01 (No
     * preference).
     *
     * In versions prior to 2.3.1 only a single element is supported.  Starting from EMVCo version 2.3.1,
     * this array can now support 1-2 elements.
     * When providing two preferences, you must ensure that they are in preference order and are not
     * conflicting. For example, 02 = No challenge requested and 04 = Challenge requested (Mandate).
     * >01 - No preference
     * >
     * >02 - No challenge requested
     * >
     * >03 - Challenge requested: 3DS Requestor Preference
     * >
     * >04 - Challenge requested: Mandate
     * >
     * >05 - No challenge requested (transactional risk analysis is already performed) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >06 - No challenge requested (Data share only) (EMV 3DS 2.2.0 version or greater)
     * >
     * >07 - No challenge requested (strong consumer authentication is already performed) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >08 - No challenge requested (utilise whitelist exemption if no challenge required) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >09 - Challenge requested (whitelist prompt requested if challenge required) (EMV 3DS 2.2.0 version
     * or greater)
     * >
     * >80 through 99 - can be used for PS-specific values, regardless of protocol version
     * >
     *
     * @return string[]|null
     */
    public function getThreeDsRequestorChallengeInd(): ?array
    {
        return $this->threeDsRequestorChallengeInd;
    }

    /**
     * Sets Three Ds Requestor Challenge Ind.
     * Indicates whether a challenge is requested for this transaction. For example: For 01-PA, a 3DS
     * Requestor may have concerns about the transaction, and request a challenge. For 02-NPA, a challenge
     * may be necessary when adding a new card to a wallet.
     *
     * Values "05" through "09" are accepted as well if 3DS Server initiates authentication with EMV 3DS 2.
     * 2.0 version or greater (required protocol version can be set in the preferred_protocol_version
     * field).
     *
     * If the element is not provided, the expected action is that the ACS would interpret as 01 (No
     * preference).
     *
     * In versions prior to 2.3.1 only a single element is supported.  Starting from EMVCo version 2.3.1,
     * this array can now support 1-2 elements.
     * When providing two preferences, you must ensure that they are in preference order and are not
     * conflicting. For example, 02 = No challenge requested and 04 = Challenge requested (Mandate).
     * >01 - No preference
     * >
     * >02 - No challenge requested
     * >
     * >03 - Challenge requested: 3DS Requestor Preference
     * >
     * >04 - Challenge requested: Mandate
     * >
     * >05 - No challenge requested (transactional risk analysis is already performed) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >06 - No challenge requested (Data share only) (EMV 3DS 2.2.0 version or greater)
     * >
     * >07 - No challenge requested (strong consumer authentication is already performed) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >08 - No challenge requested (utilise whitelist exemption if no challenge required) (EMV 3DS 2.2.0
     * version or greater)
     * >
     * >09 - Challenge requested (whitelist prompt requested if challenge required) (EMV 3DS 2.2.0 version
     * or greater)
     * >
     * >80 through 99 - can be used for PS-specific values, regardless of protocol version
     * >
     *
     * @maps three_ds_requestor_challenge_ind
     * @factory \FortisAPILib\Models\ThreeDsRequestorChallengeIndEnum::checkValue
     *
     * @param string[]|null $threeDsRequestorChallengeInd
     */
    public function setThreeDsRequestorChallengeInd(?array $threeDsRequestorChallengeInd): void
    {
        $this->threeDsRequestorChallengeInd = $threeDsRequestorChallengeInd;
    }

    /**
     * Returns Three Ds Requestor Prior Authentication Info.
     * This object contains information about how the 3DS Requestor authenticated the cardholder as part of
     * a previous 3DS transaction.
     *
     * In versions prior to 2.3.1, this array is limited to a size of 1.  Starting from EMVCo version 2.3.1
     * this array size may be 1-3.
     *
     * This field is optional, but recommended to include for versions prior to 2.3.1. From 2.3.1, it is
     * required for 3RI in the case of Decoupled Authentication Fallback or for SPC.
     *
     * @return ThreeDsRequestorPriorAuthenticationInfo[]|null
     */
    public function getThreeDsRequestorPriorAuthenticationInfo(): ?array
    {
        return $this->threeDsRequestorPriorAuthenticationInfo;
    }

    /**
     * Sets Three Ds Requestor Prior Authentication Info.
     * This object contains information about how the 3DS Requestor authenticated the cardholder as part of
     * a previous 3DS transaction.
     *
     * In versions prior to 2.3.1, this array is limited to a size of 1.  Starting from EMVCo version 2.3.1
     * this array size may be 1-3.
     *
     * This field is optional, but recommended to include for versions prior to 2.3.1. From 2.3.1, it is
     * required for 3RI in the case of Decoupled Authentication Fallback or for SPC.
     *
     * @maps three_ds_requestor_prior_authentication_info
     *
     * @param ThreeDsRequestorPriorAuthenticationInfo[]|null $threeDsRequestorPriorAuthenticationInfo
     */
    public function setThreeDsRequestorPriorAuthenticationInfo(?array $threeDsRequestorPriorAuthenticationInfo): void
    {
        $this->threeDsRequestorPriorAuthenticationInfo = $threeDsRequestorPriorAuthenticationInfo;
    }

    /**
     * Returns Three Ds Requestor Dec Req Ind.
     * Indicates whether the 3DS Requestor requests the ACS to utilise Decoupled Authentication and agrees
     * to utilise Decoupled Authentication if the ACS confirms its use.
     *
     * Value "F" and "B" are only valid for EMV 3DS 2.3.1 or later.
     *
     * The field is optional and if value is not present, the expected action is for the ACS to interpret
     * as "N".
     * Available for supporting EMV 3DS 2.2.0 and later versions.
     * >Y - Decoupled Authentication is supported and preferred if challenge is necessary.
     * >
     * >N - Do not use Decoupled Authentication.
     * >
     * >F - Decoupled Authentication is supported and is to be used only as a fallback challenge method if
     * a challenge is necessary (Transaction Status = D in RReq). Available in EMV 3DS 2.3.1 and later.
     * >
     * >B - Decoupled Authentication is supported and can be used as a primary or fallback challenge method
     * if a challenge is necessary (Transaction Status = D in either ARes or RReq). Available in EMV 3DS 2.
     * 3.1 and later.
     * >
     */
    public function getThreeDsRequestorDecReqInd(): ?string
    {
        return $this->threeDsRequestorDecReqInd;
    }

    /**
     * Sets Three Ds Requestor Dec Req Ind.
     * Indicates whether the 3DS Requestor requests the ACS to utilise Decoupled Authentication and agrees
     * to utilise Decoupled Authentication if the ACS confirms its use.
     *
     * Value "F" and "B" are only valid for EMV 3DS 2.3.1 or later.
     *
     * The field is optional and if value is not present, the expected action is for the ACS to interpret
     * as "N".
     * Available for supporting EMV 3DS 2.2.0 and later versions.
     * >Y - Decoupled Authentication is supported and preferred if challenge is necessary.
     * >
     * >N - Do not use Decoupled Authentication.
     * >
     * >F - Decoupled Authentication is supported and is to be used only as a fallback challenge method if
     * a challenge is necessary (Transaction Status = D in RReq). Available in EMV 3DS 2.3.1 and later.
     * >
     * >B - Decoupled Authentication is supported and can be used as a primary or fallback challenge method
     * if a challenge is necessary (Transaction Status = D in either ARes or RReq). Available in EMV 3DS 2.
     * 3.1 and later.
     * >
     *
     * @maps three_ds_requestor_dec_req_ind
     * @factory \FortisAPILib\Models\ThreeDsRequestorDecReqIndEnum::checkValue
     */
    public function setThreeDsRequestorDecReqInd(?string $threeDsRequestorDecReqInd): void
    {
        $this->threeDsRequestorDecReqInd = $threeDsRequestorDecReqInd;
    }

    /**
     * Returns Three Ds Requestor Dec Max Time.
     * Indicates the maximum amount of time that the 3DS Requestor will wait for an ACS to provide the
     * results of a Decoupled Authentication transaction (in minutes). Valid values are between 1 and 10080.
     *
     * The field is optional and if value is not present, the expected action is for the ACS to interpret
     * it as 10080 minutes (7 days).
     * Available for supporting EMV 3DS 2.2.0 and later versions.
     *
     * Starting from EMV 3DS 2.3.1:
     * This field is required if three_ds_requestor_dec_req_ind = Y, F or B
     */
    public function getThreeDsRequestorDecMaxTime(): ?int
    {
        return $this->threeDsRequestorDecMaxTime;
    }

    /**
     * Sets Three Ds Requestor Dec Max Time.
     * Indicates the maximum amount of time that the 3DS Requestor will wait for an ACS to provide the
     * results of a Decoupled Authentication transaction (in minutes). Valid values are between 1 and 10080.
     *
     * The field is optional and if value is not present, the expected action is for the ACS to interpret
     * it as 10080 minutes (7 days).
     * Available for supporting EMV 3DS 2.2.0 and later versions.
     *
     * Starting from EMV 3DS 2.3.1:
     * This field is required if three_ds_requestor_dec_req_ind = Y, F or B
     *
     * @maps three_ds_requestor_dec_max_time
     */
    public function setThreeDsRequestorDecMaxTime(?int $threeDsRequestorDecMaxTime): void
    {
        $this->threeDsRequestorDecMaxTime = $threeDsRequestorDecMaxTime;
    }

    /**
     * Returns Three Ds Requestor Spc Support.
     * Indicate if the 3DS Requestor supports the SPC authentication.
     *
     * This field is required if device_channel = 02 (BRW) and it is supported by the 3DS Requestor.
     * Available for supporting EMV 3DS 2.3.1 and later versions.
     * >Y - Supported
     * >
     */
    public function getThreeDsRequestorSpcSupport(): ?string
    {
        return $this->threeDsRequestorSpcSupport;
    }

    /**
     * Sets Three Ds Requestor Spc Support.
     * Indicate if the 3DS Requestor supports the SPC authentication.
     *
     * This field is required if device_channel = 02 (BRW) and it is supported by the 3DS Requestor.
     * Available for supporting EMV 3DS 2.3.1 and later versions.
     * >Y - Supported
     * >
     *
     * @maps three_ds_requestor_spc_support
     * @factory \FortisAPILib\Models\ThreeDsRequestorSpcSupportEnum::checkValue
     */
    public function setThreeDsRequestorSpcSupport(?string $threeDsRequestorSpcSupport): void
    {
        $this->threeDsRequestorSpcSupport = $threeDsRequestorSpcSupport;
    }

    /**
     * Returns Spc Incomp Ind.
     * Reason that the SPC authentication was not completed.
     * This field is required if device_channel = 02 (BRW) and the 3DS Requestor attempts to invoke SPC API
     * and there is an error. Available for supporting EMV 3DS 2.3.1 and later versions.
     */
    public function getSpcIncompInd(): ?string
    {
        return $this->spcIncompInd;
    }

    /**
     * Sets Spc Incomp Ind.
     * Reason that the SPC authentication was not completed.
     * This field is required if device_channel = 02 (BRW) and the 3DS Requestor attempts to invoke SPC API
     * and there is an error. Available for supporting EMV 3DS 2.3.1 and later versions.
     *
     * @maps spc_incomp_ind
     */
    public function setSpcIncompInd(?string $spcIncompInd): void
    {
        $this->spcIncompInd = $spcIncompInd;
    }

    /**
     * Converts the ThreeDsRequestor object to a human-readable string representation.
     *
     * @return string The string representation of the ThreeDsRequestor object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ThreeDsRequestor',
            [
                'threeDsRequestorAuthenticationInd' => $this->threeDsRequestorAuthenticationInd,
                'threeDsRequestorAuthenticationInfo' => $this->threeDsRequestorAuthenticationInfo,
                'threeDsRequestorChallengeInd' => $this->threeDsRequestorChallengeInd,
                'threeDsRequestorPriorAuthenticationInfo' => $this->threeDsRequestorPriorAuthenticationInfo,
                'threeDsRequestorDecReqInd' => $this->threeDsRequestorDecReqInd,
                'threeDsRequestorDecMaxTime' => $this->threeDsRequestorDecMaxTime,
                'threeDsRequestorSpcSupport' => $this->threeDsRequestorSpcSupport,
                'spcIncompInd' => $this->spcIncompInd,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['three_ds_requestor_authentication_ind']            =
            ThreeDsRequestorAuthenticationIndEnum::checkValue(
                $this->threeDsRequestorAuthenticationInd
            );
        if (isset($this->threeDsRequestorAuthenticationInfo)) {
            $json['three_ds_requestor_authentication_info']       = $this->threeDsRequestorAuthenticationInfo;
        }
        if (isset($this->threeDsRequestorChallengeInd)) {
            $json['three_ds_requestor_challenge_ind']             =
                ThreeDsRequestorChallengeIndEnum::checkValue(
                    $this->threeDsRequestorChallengeInd
                );
        }
        if (isset($this->threeDsRequestorPriorAuthenticationInfo)) {
            $json['three_ds_requestor_prior_authentication_info'] = $this->threeDsRequestorPriorAuthenticationInfo;
        }
        if (isset($this->threeDsRequestorDecReqInd)) {
            $json['three_ds_requestor_dec_req_ind']               =
                ThreeDsRequestorDecReqIndEnum::checkValue(
                    $this->threeDsRequestorDecReqInd
                );
        }
        if (isset($this->threeDsRequestorDecMaxTime)) {
            $json['three_ds_requestor_dec_max_time']              = $this->threeDsRequestorDecMaxTime;
        }
        if (isset($this->threeDsRequestorSpcSupport)) {
            $json['three_ds_requestor_spc_support']               =
                ThreeDsRequestorSpcSupportEnum::checkValue(
                    $this->threeDsRequestorSpcSupport
                );
        }
        if (isset($this->spcIncompInd)) {
            $json['spc_incomp_ind']                               = $this->spcIncompInd;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
