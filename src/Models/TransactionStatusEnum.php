<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * Indicates whether a transaction qualifies as an authenticated transaction.
 * >Y - Authentication / Account verification successful
 * >
 * >N - Not authenticated / Account not verified; Transaction denied
 * >
 * >U - Authentication / Account verification could not be performed; technical or other problem
 * >
 * >C - In order to complete the authentication, a challenge is required
 * >
 * >R - Authentication / Account verification Rejected. Issuer is rejecting authentication/verification
 * and request that authorization not be attempted
 * >
 * >A - Attempts processing performed; Not authenticated / verified, but a proof of attempt
 * authentication / verification is provided
 * >
 * >D - In order to complete the authentication, a challenge is required. Decoupled Authentication
 * confirmed. (Only if the 3DS Server has initiated authentication with EMV 3DS 2.2.0 version or
 * greater)
 * >
 * >I - Informational Only; 3DS Requestor challenge preference acknowledged. (Only if the 3DS Server
 * has initiated authentication with EMV 3DS 2.2.0 version or greater)
 * >
 */
class TransactionStatusEnum
{
    public const Y = 'Y';

    public const N = 'N';

    public const U = 'U';

    public const C = 'C';

    public const R = 'R';

    public const A = 'A';

    public const D = 'D';

    public const I = 'I';

    private const _ALL_VALUES = [self::Y, self::N, self::U, self::C, self::R, self::A, self::D, self::I];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for TransactionStatusEnum.");
    }
}
