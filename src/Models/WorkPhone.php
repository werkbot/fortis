<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * The work phone provided by the Cardholder. Refer to ITU-E.164 for additional information on format
 * and length.
 *
 * This field is required if available, unless market or regional mandate restricts sending this
 * information.
 */
class WorkPhone implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $cc;

    /**
     * @var string|null
     */
    private $subscriber;

    /**
     * Returns Cc.
     * Country Code of the phone
     */
    public function getCc(): ?string
    {
        return $this->cc;
    }

    /**
     * Sets Cc.
     * Country Code of the phone
     *
     * @maps cc
     */
    public function setCc(?string $cc): void
    {
        $this->cc = $cc;
    }

    /**
     * Returns Subscriber.
     * Subscriber section of the number
     */
    public function getSubscriber(): ?string
    {
        return $this->subscriber;
    }

    /**
     * Sets Subscriber.
     * Subscriber section of the number
     *
     * @maps subscriber
     */
    public function setSubscriber(?string $subscriber): void
    {
        $this->subscriber = $subscriber;
    }

    /**
     * Converts the WorkPhone object to a human-readable string representation.
     *
     * @return string The string representation of the WorkPhone object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'WorkPhone',
            [
                'cc' => $this->cc,
                'subscriber' => $this->subscriber,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->cc)) {
            $json['cc']         = $this->cc;
        }
        if (isset($this->subscriber)) {
            $json['subscriber'] = $this->subscriber;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
