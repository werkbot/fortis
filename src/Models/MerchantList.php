<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

class MerchantList implements \JsonSerializable
{
    /**
     * @var string
     */
    private $merchantNameListed;

    /**
     * @var string|null
     */
    private $acquirerMerchantIdListed;

    /**
     * @var string|null
     */
    private $merchantAmount;

    /**
     * @var string|null
     */
    private $merchantCurrency;

    /**
     * @var string|null
     */
    private $merchantExponent;

    /**
     * @param string $merchantNameListed
     */
    public function __construct(string $merchantNameListed)
    {
        $this->merchantNameListed = $merchantNameListed;
    }

    /**
     * Returns Merchant Name Listed.
     * Name of the listed merchant as used in the authorization message as defined in ISO 8583.
     */
    public function getMerchantNameListed(): string
    {
        return $this->merchantNameListed;
    }

    /**
     * Sets Merchant Name Listed.
     * Name of the listed merchant as used in the authorization message as defined in ISO 8583.
     *
     * @required
     * @maps merchant_name_listed
     */
    public function setMerchantNameListed(string $merchantNameListed): void
    {
        $this->merchantNameListed = $merchantNameListed;
    }

    /**
     * Returns Acquirer Merchant Id Listed.
     * Acquirer-assigned Merchant Listed Identifier.
     * This may be the same value that is used in authorisation requests sent on behalf of the 3DS
     * Requestor and is represented in ISO 8583 formatting requirements.
     */
    public function getAcquirerMerchantIdListed(): ?string
    {
        return $this->acquirerMerchantIdListed;
    }

    /**
     * Sets Acquirer Merchant Id Listed.
     * Acquirer-assigned Merchant Listed Identifier.
     * This may be the same value that is used in authorisation requests sent on behalf of the 3DS
     * Requestor and is represented in ISO 8583 formatting requirements.
     *
     * @maps acquirer_merchant_id_listed
     */
    public function setAcquirerMerchantIdListed(?string $acquirerMerchantIdListed): void
    {
        $this->acquirerMerchantIdListed = $acquirerMerchantIdListed;
    }

    /**
     * Returns Merchant Amount.
     * Purchase amount for the merchant in minor units of currency with all punctuation removed.
     * When used in conjunction with the Purchase Currency Exponent field, proper punctuation can be
     * calculated.
     */
    public function getMerchantAmount(): ?string
    {
        return $this->merchantAmount;
    }

    /**
     * Sets Merchant Amount.
     * Purchase amount for the merchant in minor units of currency with all punctuation removed.
     * When used in conjunction with the Purchase Currency Exponent field, proper punctuation can be
     * calculated.
     *
     * @maps merchant_amount
     */
    public function setMerchantAmount(?string $merchantAmount): void
    {
        $this->merchantAmount = $merchantAmount;
    }

    /**
     * Returns Merchant Currency.
     * Currency Code in which purchase Merchant Amount is expressed. Must be provided as ISO 4217 three-
     * digit currency code except values 955-964 and 999.
     */
    public function getMerchantCurrency(): ?string
    {
        return $this->merchantCurrency;
    }

    /**
     * Sets Merchant Currency.
     * Currency Code in which purchase Merchant Amount is expressed. Must be provided as ISO 4217 three-
     * digit currency code except values 955-964 and 999.
     *
     * @maps merchant_currency
     */
    public function setMerchantCurrency(?string $merchantCurrency): void
    {
        $this->merchantCurrency = $merchantCurrency;
    }

    /**
     * Returns Merchant Exponent.
     * Minor units of Merchant Currency as specified in the ISO 4217 currency exponent.
     */
    public function getMerchantExponent(): ?string
    {
        return $this->merchantExponent;
    }

    /**
     * Sets Merchant Exponent.
     * Minor units of Merchant Currency as specified in the ISO 4217 currency exponent.
     *
     * @maps merchant_exponent
     */
    public function setMerchantExponent(?string $merchantExponent): void
    {
        $this->merchantExponent = $merchantExponent;
    }

    /**
     * Converts the MerchantList object to a human-readable string representation.
     *
     * @return string The string representation of the MerchantList object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'MerchantList',
            [
                'merchantNameListed' => $this->merchantNameListed,
                'acquirerMerchantIdListed' => $this->acquirerMerchantIdListed,
                'merchantAmount' => $this->merchantAmount,
                'merchantCurrency' => $this->merchantCurrency,
                'merchantExponent' => $this->merchantExponent,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['merchant_name_listed']            = $this->merchantNameListed;
        if (isset($this->acquirerMerchantIdListed)) {
            $json['acquirer_merchant_id_listed'] = $this->acquirerMerchantIdListed;
        }
        if (isset($this->merchantAmount)) {
            $json['merchant_amount']             = $this->merchantAmount;
        }
        if (isset($this->merchantCurrency)) {
            $json['merchant_currency']           = $this->merchantCurrency;
        }
        if (isset($this->merchantExponent)) {
            $json['merchant_exponent']           = $this->merchantExponent;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
