<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

class Order21 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $key;

    /**
     * @var string
     */
    private $operator;

    /**
     * @param string $key
     * @param string $operator
     */
    public function __construct(string $key, string $operator)
    {
        $this->key = $key;
        $this->operator = $operator;
    }

    /**
     * Returns Key.
     * Resource key to order by.
     */
    public function getKey(): string
    {
        return $this->key;
    }

    /**
     * Sets Key.
     * Resource key to order by.
     *
     * @required
     * @maps key
     */
    public function setKey(string $key): void
    {
        $this->key = $key;
    }

    /**
     * Returns Operator.
     * The order. Ascending or descending.
     */
    public function getOperator(): string
    {
        return $this->operator;
    }

    /**
     * Sets Operator.
     * The order. Ascending or descending.
     *
     * @required
     * @maps operator
     * @factory \FortisAPILib\Models\OperatorEnum::checkValue
     */
    public function setOperator(string $operator): void
    {
        $this->operator = $operator;
    }

    /**
     * Converts the Order21 object to a human-readable string representation.
     *
     * @return string The string representation of the Order21 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Order21',
            [
                'key' => $this->key,
                'operator' => $this->operator,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['key']      = $this->key;
        $json['operator'] = OperatorEnum::checkValue($this->operator);
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
