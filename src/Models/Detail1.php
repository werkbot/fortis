<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * Error details
 */
class Detail1 implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $threeDsServerTransId;

    /**
     * @var string|null
     */
    private $acsTransId;

    /**
     * @var string|null
     */
    private $dsTransId;

    /**
     * @var string|null
     */
    private $errorCode;

    /**
     * @var string|null
     */
    private $errorComponent;

    /**
     * @var string|null
     */
    private $errorDescription;

    /**
     * @var string|null
     */
    private $errorDetail;

    /**
     * @var string|null
     */
    private $sdkTransId;

    /**
     * @var string|null
     */
    private $errorMessageType;

    /**
     * Returns Three Ds Server Trans Id.
     * Universally unique transaction identifier assigned by the 3DS Server to identify a single
     * transaction. It has the same value as the corresponding received authentication request. This value
     * has 36 characters in a format defined in IETF RFC 4122.
     */
    public function getThreeDsServerTransId(): ?string
    {
        return $this->threeDsServerTransId;
    }

    /**
     * Sets Three Ds Server Trans Id.
     * Universally unique transaction identifier assigned by the 3DS Server to identify a single
     * transaction. It has the same value as the corresponding received authentication request. This value
     * has 36 characters in a format defined in IETF RFC 4122.
     *
     * @maps three_ds_server_trans_id
     */
    public function setThreeDsServerTransId(?string $threeDsServerTransId): void
    {
        $this->threeDsServerTransId = $threeDsServerTransId;
    }

    /**
     * Returns Acs Trans Id.
     * Universally Unique transaction identifier assigned by the ACS to identify a single transaction.
     */
    public function getAcsTransId(): ?string
    {
        return $this->acsTransId;
    }

    /**
     * Sets Acs Trans Id.
     * Universally Unique transaction identifier assigned by the ACS to identify a single transaction.
     *
     * @maps acs_trans_id
     */
    public function setAcsTransId(?string $acsTransId): void
    {
        $this->acsTransId = $acsTransId;
    }

    /**
     * Returns Ds Trans Id.
     * Universally unique transaction identifier assigned by the DS to identify a single transaction.
     */
    public function getDsTransId(): ?string
    {
        return $this->dsTransId;
    }

    /**
     * Sets Ds Trans Id.
     * Universally unique transaction identifier assigned by the DS to identify a single transaction.
     *
     * @maps ds_trans_id
     */
    public function setDsTransId(?string $dsTransId): void
    {
        $this->dsTransId = $dsTransId;
    }

    /**
     * Returns Error Code.
     * Code indicating the type of problem identified.
     * >101 - Message received invalid
     * >
     * >102 - Message version number not supported
     * >
     * >103 - Sent messages limit exceeded. Only used for PReq
     * >
     * >201 - Required element missing
     * >
     * >202 - Critical message extension not recognized
     * >
     * >203 - Format on one or more elements is invalid according to the specs
     * >
     * >204 - Duplicate data element
     * >
     * >205 - Card range overlap
     * >
     * >206 - Card range action indicator
     * >
     * >207 - Value in the reserved value range
     * >
     * >301 - Transaction id is not recognized
     * >
     * >302 - Data decryption failure
     * >
     * >303 - Access denied, invalid endpoint
     * >
     * >304 - ISO code is not valid
     * >
     * >305 - Transaction data is not valid
     * >
     * >306 - Merchant category code is not valid for payment system
     * >
     * >307 - Serial number is not valid
     * >
     * >308 - Signature verification failure
     * >
     * >309 - Validation against content security policies failure
     * >
     * >310 - Incorrect cryptographic algorithm
     * >
     * >311 - Incorrect kid
     * >
     * >312 - Duplicate message
     * >
     * >313 - Inconsistent RReq message
     * >
     * >314 - Multiple creq messages are not supported
     * >
     * >315 - CReq message received after the RReq message
     * >
     * >402 - Transaction timed out
     * >
     * >403 - Transient system failure
     * >
     * >404 - Permanent system failure
     * >
     * >405 - System connection failure
     * >
     * >911 - UnionPay specific error code. Present when Data fields relevance check failed (ECI value and
     * AV appearance are inconsistent with transaction status).
     * >
     * >912 - UnionPay specific error code. Present when duplicated transaction ID (Transaction ID should
     * be unique for each AReq request).
     * >
     */
    public function getErrorCode(): ?string
    {
        return $this->errorCode;
    }

    /**
     * Sets Error Code.
     * Code indicating the type of problem identified.
     * >101 - Message received invalid
     * >
     * >102 - Message version number not supported
     * >
     * >103 - Sent messages limit exceeded. Only used for PReq
     * >
     * >201 - Required element missing
     * >
     * >202 - Critical message extension not recognized
     * >
     * >203 - Format on one or more elements is invalid according to the specs
     * >
     * >204 - Duplicate data element
     * >
     * >205 - Card range overlap
     * >
     * >206 - Card range action indicator
     * >
     * >207 - Value in the reserved value range
     * >
     * >301 - Transaction id is not recognized
     * >
     * >302 - Data decryption failure
     * >
     * >303 - Access denied, invalid endpoint
     * >
     * >304 - ISO code is not valid
     * >
     * >305 - Transaction data is not valid
     * >
     * >306 - Merchant category code is not valid for payment system
     * >
     * >307 - Serial number is not valid
     * >
     * >308 - Signature verification failure
     * >
     * >309 - Validation against content security policies failure
     * >
     * >310 - Incorrect cryptographic algorithm
     * >
     * >311 - Incorrect kid
     * >
     * >312 - Duplicate message
     * >
     * >313 - Inconsistent RReq message
     * >
     * >314 - Multiple creq messages are not supported
     * >
     * >315 - CReq message received after the RReq message
     * >
     * >402 - Transaction timed out
     * >
     * >403 - Transient system failure
     * >
     * >404 - Permanent system failure
     * >
     * >405 - System connection failure
     * >
     * >911 - UnionPay specific error code. Present when Data fields relevance check failed (ECI value and
     * AV appearance are inconsistent with transaction status).
     * >
     * >912 - UnionPay specific error code. Present when duplicated transaction ID (Transaction ID should
     * be unique for each AReq request).
     * >
     *
     * @maps error_code
     */
    public function setErrorCode(?string $errorCode): void
    {
        $this->errorCode = $errorCode;
    }

    /**
     * Returns Error Component.
     * Code indicating the 3-D Secure component that identified the error.
     * >C - 3DS SDK
     * >
     * >S - 3DS Server
     * >
     * >D - DS
     * >
     * >A - ACS
     * >
     */
    public function getErrorComponent(): ?string
    {
        return $this->errorComponent;
    }

    /**
     * Sets Error Component.
     * Code indicating the 3-D Secure component that identified the error.
     * >C - 3DS SDK
     * >
     * >S - 3DS Server
     * >
     * >D - DS
     * >
     * >A - ACS
     * >
     *
     * @maps error_component
     */
    public function setErrorComponent(?string $errorComponent): void
    {
        $this->errorComponent = $errorComponent;
    }

    /**
     * Returns Error Description.
     * Text describing the problem identified.
     */
    public function getErrorDescription(): ?string
    {
        return $this->errorDescription;
    }

    /**
     * Sets Error Description.
     * Text describing the problem identified.
     *
     * @maps error_description
     */
    public function setErrorDescription(?string $errorDescription): void
    {
        $this->errorDescription = $errorDescription;
    }

    /**
     * Returns Error Detail.
     * Additional detail regarding the problem identified.
     */
    public function getErrorDetail(): ?string
    {
        return $this->errorDetail;
    }

    /**
     * Sets Error Detail.
     * Additional detail regarding the problem identified.
     *
     * @maps error_detail
     */
    public function setErrorDetail(?string $errorDetail): void
    {
        $this->errorDetail = $errorDetail;
    }

    /**
     * Returns Sdk Trans Id.
     * Universally unique transaction identifier assigned by the 3DS SDK to identify a single transaction.
     */
    public function getSdkTransId(): ?string
    {
        return $this->sdkTransId;
    }

    /**
     * Sets Sdk Trans Id.
     * Universally unique transaction identifier assigned by the 3DS SDK to identify a single transaction.
     *
     * @maps sdk_trans_id
     */
    public function setSdkTransId(?string $sdkTransId): void
    {
        $this->sdkTransId = $sdkTransId;
    }

    /**
     * Returns Error Message Type.
     * The Message Type that was identified as erroneous.
     * >AReq - Authentication request
     * >
     * >ARes - Authentication response
     * >
     * >CReq - Challenge request
     * >
     * >CRes - Challenge response
     * >
     * >PReq - Preparation request
     * >
     * >PRes - Preparation response
     * >
     * >RReq - Results request
     * >
     * >RRes - Results response
     * >
     * >Erro - Error
     * >
     * >3dsMethodReq - 3DS method request
     * >
     * >OReq - Operation request. Since 2.3.1
     * >
     * >ORes - Operation response. Since 2.3.1
     * >
     */
    public function getErrorMessageType(): ?string
    {
        return $this->errorMessageType;
    }

    /**
     * Sets Error Message Type.
     * The Message Type that was identified as erroneous.
     * >AReq - Authentication request
     * >
     * >ARes - Authentication response
     * >
     * >CReq - Challenge request
     * >
     * >CRes - Challenge response
     * >
     * >PReq - Preparation request
     * >
     * >PRes - Preparation response
     * >
     * >RReq - Results request
     * >
     * >RRes - Results response
     * >
     * >Erro - Error
     * >
     * >3dsMethodReq - 3DS method request
     * >
     * >OReq - Operation request. Since 2.3.1
     * >
     * >ORes - Operation response. Since 2.3.1
     * >
     *
     * @maps error_message_type
     */
    public function setErrorMessageType(?string $errorMessageType): void
    {
        $this->errorMessageType = $errorMessageType;
    }

    /**
     * Converts the Detail1 object to a human-readable string representation.
     *
     * @return string The string representation of the Detail1 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Detail1',
            [
                'threeDsServerTransId' => $this->threeDsServerTransId,
                'acsTransId' => $this->acsTransId,
                'dsTransId' => $this->dsTransId,
                'errorCode' => $this->errorCode,
                'errorComponent' => $this->errorComponent,
                'errorDescription' => $this->errorDescription,
                'errorDetail' => $this->errorDetail,
                'sdkTransId' => $this->sdkTransId,
                'errorMessageType' => $this->errorMessageType,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->threeDsServerTransId)) {
            $json['three_ds_server_trans_id'] = $this->threeDsServerTransId;
        }
        if (isset($this->acsTransId)) {
            $json['acs_trans_id']             = $this->acsTransId;
        }
        if (isset($this->dsTransId)) {
            $json['ds_trans_id']              = $this->dsTransId;
        }
        if (isset($this->errorCode)) {
            $json['error_code']               = $this->errorCode;
        }
        if (isset($this->errorComponent)) {
            $json['error_component']          = $this->errorComponent;
        }
        if (isset($this->errorDescription)) {
            $json['error_description']        = $this->errorDescription;
        }
        if (isset($this->errorDetail)) {
            $json['error_detail']             = $this->errorDetail;
        }
        if (isset($this->sdkTransId)) {
            $json['sdk_trans_id']             = $this->sdkTransId;
        }
        if (isset($this->errorMessageType)) {
            $json['error_message_type']       = $this->errorMessageType;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
