<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * Contains information for the Cardholder Account.
 */
class CardholderAccount implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $expireDate;

    /**
     * @var AccountInfo|null
     */
    private $accountInfo;

    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var string
     */
    private $schemeId;

    /**
     * @var string|null
     */
    private $accountId;

    /**
     * @var string|null
     */
    private $cvv;

    /**
     * @param string $accountNumber
     * @param string $schemeId
     */
    public function __construct(string $accountNumber, string $schemeId)
    {
        $this->accountNumber = $accountNumber;
        $this->schemeId = $schemeId;
    }

    /**
     * Returns Expire Date.
     * Expiry date of the PAN or token supplied to the 3DS Requestor by the Cardholder. The field has 4
     * characters in a format YYMM.
     * The requirements of the presence of this field are DS specific.
     */
    public function getExpireDate(): ?string
    {
        return $this->expireDate;
    }

    /**
     * Sets Expire Date.
     * Expiry date of the PAN or token supplied to the 3DS Requestor by the Cardholder. The field has 4
     * characters in a format YYMM.
     * The requirements of the presence of this field are DS specific.
     *
     * @maps expire_date
     */
    public function setExpireDate(?string $expireDate): void
    {
        $this->expireDate = $expireDate;
    }

    /**
     * Returns Account Info.
     * This field contains additional information about the Cardholder's account provided by the 3DS
     * Requestor. The field is optional but recommended to include.
     */
    public function getAccountInfo(): ?AccountInfo
    {
        return $this->accountInfo;
    }

    /**
     * Sets Account Info.
     * This field contains additional information about the Cardholder's account provided by the 3DS
     * Requestor. The field is optional but recommended to include.
     *
     * @maps account_info
     */
    public function setAccountInfo(?AccountInfo $accountInfo): void
    {
        $this->accountInfo = $accountInfo;
    }

    /**
     * Returns Account Number.
     * Account number that will be used in the authorization request for payment transactions. May be
     * represented by PAN or token.
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account number that will be used in the authorization request for payment transactions. May be
     * represented by PAN or token.
     *
     * @required
     * @maps account_number
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Scheme Id.
     * ID for the scheme to which the Cardholder's acctNumber belongs to. It will be used to identify the
     * Scheme from the 3DS Server configuration.
     */
    public function getSchemeId(): string
    {
        return $this->schemeId;
    }

    /**
     * Sets Scheme Id.
     * ID for the scheme to which the Cardholder's acctNumber belongs to. It will be used to identify the
     * Scheme from the 3DS Server configuration.
     *
     * @required
     * @maps scheme_id
     * @factory \FortisAPILib\Models\SchemeIdEnum::checkValue
     */
    public function setSchemeId(string $schemeId): void
    {
        $this->schemeId = $schemeId;
    }

    /**
     * Returns Account Id.
     * Additional information about the account optionally provided by the 3DS Requestor.
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets Account Id.
     * Additional information about the account optionally provided by the 3DS Requestor.
     *
     * @maps account_id
     */
    public function setAccountId(?string $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * Returns Cvv.
     * Three or four-digit security code printed on the card. This field is required depending on the rules
     * provided by the Directory Server. Available for supporting EMV 3DS 2.3.1 and later versions.
     */
    public function getCvv(): ?string
    {
        return $this->cvv;
    }

    /**
     * Sets Cvv.
     * Three or four-digit security code printed on the card. This field is required depending on the rules
     * provided by the Directory Server. Available for supporting EMV 3DS 2.3.1 and later versions.
     *
     * @maps cvv
     */
    public function setCvv(?string $cvv): void
    {
        $this->cvv = $cvv;
    }

    /**
     * Converts the CardholderAccount object to a human-readable string representation.
     *
     * @return string The string representation of the CardholderAccount object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CardholderAccount',
            [
                'expireDate' => $this->expireDate,
                'accountInfo' => $this->accountInfo,
                'accountNumber' => $this->accountNumber,
                'schemeId' => $this->schemeId,
                'accountId' => $this->accountId,
                'cvv' => $this->cvv,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->expireDate)) {
            $json['expire_date']  = $this->expireDate;
        }
        if (isset($this->accountInfo)) {
            $json['account_info'] = $this->accountInfo;
        }
        $json['account_number']   = $this->accountNumber;
        $json['scheme_id']        = SchemeIdEnum::checkValue($this->schemeId);
        if (isset($this->accountId)) {
            $json['account_id']   = $this->accountId;
        }
        if (isset($this->cvv)) {
            $json['cvv']          = $this->cvv;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
